{"version":3,"sources":["logo.svg","Components/Partials/LanguagesSwitch.js","Components/Languages/Italian/Partials/Header.js","Components/Languages/Italian/Partials/Footer.js","Components/Languages/Italian/Partials/Layout.js","Models/Paragraph.js","Models/HomeMessage.js","Components/Languages/Italian/Pages/Home.js","Components/Languages/Italian/Pages/About.js","Models/Course.js","Components/Languages/Italian/Pages/Classes.js","Components/Languages/Italian/Pages/Contact.js","Components/Sections/ItalianSection.js","Components/Languages/Italian/Pages/Error.js","Components/Sections/SiteRoutes.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","LanguagesSwitch","style","display","float","Header","title","className","marginBottom","Navbar","Brand","href","process","Toggle","aria-controls","Collapse","id","Nav","Link","src","alt","defaultProps","Footer","REACT_APP_NAME","REACT_APP_VERSION","class","Layout","props","children","width","height","rel","Paragraph","text","toDisplay","key","dangerouslySetInnerHTML","__html","sanitizeHtml","allowedTags","allowedAttributes","this","HomeMessage","imagesrc","Carousel","Item","Caption","backgroundColor","color","Home","state","items","paragraphs","hasError","serverRequest","axios","get","then","result","data","map","item","index","push","setState","error","Component","About","Jumbotron","align","margin","paragraph","Course","datestart","dateend","Card","Img","variant","textAlign","padding","Body","Title","Text","Badge","Classes","onShowClass","classId","currentClassId","classes","undefined","length","Container","Row","Col","sm","ListGroup","course","action","onClick","Contact","ItalianSection","withRouter","exact","path","match","url","component","Error","SiteRoutes","NotFound","App","basename","Boolean","window","location","hostname","REACT_APP_BASE_PATH","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7d9dc463.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Nav from 'react-bootstrap/Nav';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\nconst LanguagesSwitch = () => {\n    return (\n        <div style={{ display: \"block\", float: \"right\" }}>\n            {/* <a className=\"btn btn-small\" id=\"it_link\" href={`${publicUrl}/#/it/`}>it</a>\n            <a className=\"btn btn-small\" id=\"en_link\" href={`${publicUrl}/#/en/`}>en</a> */}\n            {/* <a className=\"btn btn-small\" id=\"ge_link\" href={`${publicUrl}/#/de/`}>de</a>\n            <a className=\"btn btn-small\" id=\"es_link\" href={`${publicUrl}/#/es/`}>es</a> */}\n        </div>\n    );\n}\n\nexport default LanguagesSwitch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport logo from './../../../../logo.svg';\n\nimport LanguagesSwitch from '../../../Partials/LanguagesSwitch';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\n/**\n * Functional Component for showing the header of the site. \n * @component\n * @param {string} title Title of the site\n * @example\n * const sitename = 'my site name'\n * return (\n *   <Header title={sitename} />\n * )\n */\nconst Header = ({ title }) => {\n    return (\n        <header className=\"partial header\" style={{ marginBottom: \"15px\" }}>\n            <Navbar className=\"menu\">\n                <Navbar.Brand href={`${publicUrl}/#/`}>\n                    {/* <img\n                        src={logo}\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                        alt={`${title} logo`}\n                    /> */}\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link className=\"header-link\" id=\"home_link\" href={`${publicUrl}/#/it/`}>Home</Nav.Link>\n                            <Nav.Link className=\"header-link\" id=\"web-project_link\" href={`${publicUrl}/#/it/progetti-web`}>Progetti Web</Nav.Link>\n                            <Nav.Link className=\"header-link\" id=\"writer-project_link\" href={`${publicUrl}/#/it/progetti-scrittura`}>Progetti Scrittura</Nav.Link>\n                            <Nav.Link className=\"header-link\" id=\"permacultura_link\" href={`${publicUrl}/#/it/permacultura`}>Permacultura</Nav.Link>\n                            <Nav.Link className=\"header-link\" id=\"about_link\" href={`${publicUrl}/#/it/about`}>About</Nav.Link>\n                        </Nav>\n                        <LanguagesSwitch />\n                    </Navbar.Collapse>\n            </Navbar>\n            <section className=\"header-description\">\n                <div id=\"plandesign\"><img src=\"/images/plans.png\" alt=\"\" /></div>\n                <h1><a href=\"#\">La Magia delle Idee <small><em>by Magicianred</em></small></a></h1>\n                <p>spazio personale per dare libero sfogo alle idee. Non ci saranno solo idee concrete e pienamente sviluppate,\n                ma germogli, semi, bozze e quant'altro mi verrà in mente. <br/>\n                Molte saranno abbandonate, alcune vedranno la luce e si svilupperanno,\n                molte altre invece saranno lasciate libere di circolare con licenze adatte per farle raccoglie a chi se la sentirà.</p>\n            </section>\n        </header>\n    );\n}\n\nHeader.propTypes = {\n    /**\n     * Title of the site\n     */\n    title: PropTypes.string.isRequired,\n}\n\nHeader.defaultProps = {\n    title: 'Default Site title'\n}\n\nexport default Header;","import React from 'react';\n\nconst appName = process.env.REACT_APP_NAME;\nconst appVersion = process.env.REACT_APP_VERSION;\n\n/**\n * Functional Component for showing the footer of the site\n * @component\n * @example\n * return (\n *  <Footer />\n * )\n */\nconst Footer = () => {\n    return (\n        <footer>\n\t\t    <section id=\"footer-area\">\n    \t\t\t<section id=\"footer-outer-block\">\n\t\t\t\t\t<aside class=\"footer-segment\">\n\t\t\t\t\t    <h4>Friends</h4>\n                        <ul>\n                            <li><a href=\"#\">one linkylink</a></li>\n                            <li><a href=\"#\">two linkylinks</a></li>\n                            <li><a href=\"#\">three linkylinks</a></li>\n                        </ul>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<aside class=\"footer-segment\">\n                        <h4>Awesome Stuff</h4>\n                        <ul>\n                            <li><a href=\"#\">one linkylink</a></li>\n                            <li><a href=\"#\">two linkylinks</a></li>\n                            <li><a href=\"#\">three linkylinks</a></li>\n                        </ul>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<aside class=\"footer-segment\">\n                        <h4>Coolness</h4>\n                        <ul>\n                            <li><a href=\"#\">one linkylink</a></li>\n                            <li><a href=\"#\">two linkylinks</a></li>\n                            <li><a href=\"#\">three linkylinks</a></li>\n                        </ul>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<aside class=\"footer-segment\">\n                        <h4>Licenza Template</h4>\n                        <p><small>This work by <i>freehtml5templates.com</i> is licensed under a\n                        <i>Creative Commons Attribution 3.0</i> United States License.</small></p>\n\t\t\t\t\t</aside>\n\t\t\t    </section>\n                {/* <p>\n                    <small>This is the footer <i>{appName}</i> version <b>{appVersion}</b></small>\n                </p> */}\n            </section>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\n\n/**\n * Title of the site\n */\nconst siteName = 'La Magia delle Idee by Magicianred';\n\nconst Layout = (props) =>\n    <>\n        <Header title={siteName} />\n        <section id=\"main\">\n\t\t\t<section id=\"content\">\n                {props.children}\n            </section>\n            <aside id=\"sidebar\">\n\t\t\t\t<h3>Wiball</h3>\n\t\t\t\t<figure>\n\t\t\t\t  <img width=\"226\" height=\"186\" src=\"/images/wiball_onkeyboard.png\" alt=\"Wiball on keybord (C) Elisa Ragni 2010 by-nc-nd-3.0\" />\n\t\t\t\t  <figcaption>Wiball, la simpatica pallina che è seduta sulla tastiera, mascotte del progetto xnowi.\n\t\t\t\t\t<br />Realizzata da <a href=\"http://www.facebook.com/pages/Elisa-Ragni/159242230776374\" title=\"Visita la pagina facebook di 'Elisa Ragni'\">\n\t\t\t\t\t\tElisa Ragni</a></figcaption>\n\t\t\t\t</figure>\n\t\t\t\t<br/><br/>\n\t\t\t\t<h3>Cose da fare...</h3>\n                <ul>\n                    <li><a href=\"#\">Migliorare le lingue straniere</a></li>\n                    <li><a href=\"#\">Scrivere più racconti</a></li>\n                    <li><a href=\"#\">Trasformare l'esperienza dello sviluppo nella progettualità</a></li>\n                    <li><a href=\"#\">Rendere stabile progetto XNOWI e comunicare meglio l'idea</a></li>\n                    <li><a href=\"#\">Completare questo sito</a></li>\n                </ul>\n\t\t\t\t<br/><br/>\n\t\t\t\t<h3>I miei social</h3>\n                <ul>\n                    <li><a href=\"http://twitter.com/Magicianred79\" rel=\"nofollow\">Twitter</a></li>\n                    <li><a href=\"https://magicianred.github.io\">Simone Paolucci [me]</a></li>\n                    <li><a href=\"https://magicianred.altervista.org/home.php\">Magicianred Web Blog</a></li>\n                </ul>\n\t\t\t\t<h3>Banner</h3>\n                <img width=\"125\" height=\"125\" src=\"/images/ad125.jpg\" alt=\"\" />\n                <img width=\"125\" height=\"125\" src=\"/images/ad125.jpg\" alt=\"\" /><br />\n                <img width=\"125\" height=\"125\" src=\"/images/ad125.jpg\" alt=\"\" />\n                <img width=\"125\" height=\"125\" src=\"/images/ad125.jpg\" alt=\"\" /><br /><br />\n    \t\t</aside>\n        </section>\n        <Footer />\n    </>\n\nexport default Layout;","import React from 'react';\nimport sanitizeHtml from 'sanitize-html';\n\n/**\n * Paragraph Model definition\n * @class Paragraph\n * @param {*} id \n * @param {*} text \n */\nclass Paragraph {\n\n    /**\n     * @constructor\n     * @param {*} id\n     * @param {*} text\n     */\n    constructor(id, text) {\n        this.id = id;\n        this.text = text;\n    }\n\n    /**\n     * Display of a Paragraph class model\n     * @example\n     **  <div class=\"paragraph\" key={id}>\n     *      {text}\n     *   </div>\n     * )\n     */\n    toDisplay = () => (\n        <div className=\"paragraph\" key={this.id} dangerouslySetInnerHTML={{__html: \n            sanitizeHtml(this.text, {\n                allowedTags: [ 'p', 'b', 'i', 'em', 'strong', 'a' ],\n                allowedAttributes: {\n                    'a': [ 'href' ]\n                }})}} />\n    );\n}\n\nexport default Paragraph;","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport sanitizeHtml from 'sanitize-html';\n\n/**\n * HomeMessage Model definition\n * @class HomeMessage\n * @property {number} id\n * @property {string} title\n * @property {string} text\n * @property {string} imagesrc\n */\nclass HomeMessage {\n\n    /**\n     * @constructor\n     * @param {*} id \n     * @param {*} title \n     * @param {*} text \n     * @param {*} imagesrc \n     */\n    constructor(id, title, text, imagesrc) {\n        this.id = id;\n        this.title = title;\n        this.text = text;\n        this.imagesrc = imagesrc;\n    }\n\n    /**\n     * Display of a HomeMessage class model\n     * @example\n     * return (\n     *  <Carousel.Item key={id}>\n     *      <img \n     *          className=\"d-block w-100\" \n     *          src={imagesrc} \n     *          alt={title} />\n     *      <Carousel.Caption> \n     *          <h3>{title}</h3> \n     *          {text} \n     *      </Carousel.Caption>\n     *  </Carousel.Item>\n     * )\n     */\n    toDisplay = () => (\n        <Carousel.Item key={this.id}>\n            <img\n                className=\"d-block w-100\"\n                src={this.imagesrc}\n                alt={this.title}\n            />\n            <Carousel.Caption style={{ backgroundColor: \"black\", color: \"white\" }}>\n                <h3>{this.title}</h3>\n                <div dangerouslySetInnerHTML={{__html: \n                    sanitizeHtml(this.text, {\n                        allowedTags: [ 'p', 'b', 'i', 'em', 'strong', 'a' ],\n                        allowedAttributes: {\n                            'a': [ 'href' ]\n                        }})}} />\n            </Carousel.Caption>\n        </Carousel.Item>\n    );\n}\n\nexport default HomeMessage;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Carousel from 'react-bootstrap/Carousel';\n\nimport Layout from './../Partials/Layout';\nimport Paragraph from '../../../../Models/Paragraph';\nimport HomeMessage from '../../../../Models/HomeMessage';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\n/**\n * Component for showing the Home page.\n * \n * @component\n * @example\n * return (\n *   <Home />\n * )\n */\nclass Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            paragraphs: [],\n            hasError: false,\n        };\n    }        \n\n    componentDidMount() {\n        const items = [];\n        this.serverRequest = \n            axios\n                .get(`${publicUrl}/data/languages/english/home_messages.json`)\n                .then((result) => {\n                    result.data.map((item, index) => items.push(new HomeMessage(index, item.title, item.text, item.imagesrc)));\n                    this.setState({ items });\n            });\n        const paragraphs = [];\n        this.serverRequest = \n            axios\n                .get(`${publicUrl}/data/languages/english/pages/home.json`)\n                .then((result) => {\n                    result.data[0].paragraphs.map((item, index) => paragraphs.push(new Paragraph(index, item.text)));\n                    this.setState({ paragraphs });\n            });\n    }\n\n    // componentWillUnmount() {\n    //     if (this.serverRequest) {\n    //         this.serverRequest.abort();\n    //     }\n    // }\n\n    static getDerivedStateFromError(error) {       \n        return { hasError: true };  \n    }    \n\n    render() {\n        const { items, paragraphs, hasError } = this.state;\n        return (\n            <Layout>\n                {hasError ? <h1>Something went wrong.</h1> : null}\n                <article>\n\t\t\t\t\t\t\t<h2><a href=\"#\">Premessa</a></h2>\n\t\t\t\t\t\t\t<p>Al momento non ci sono articoli, ho solo impostato l'aspetto del sito ed alcune idee.</p>\n\t\t\t\t\t\t</article>\n        \t\t<article>\n\t\t\t\t\t\t\t<h2><a href=\"#\">First Article Title</a></h2>\n\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla.</p>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\n        \t\t<article>\n\t\t\t\t\t\t\t<h2><a href=\"#\">Second Article Title</a></h2>\n\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur sodales ligula in libero. Sed dignissim lacinia nunc.</p>\n\t\t\t\t\t\t\t<p>Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper porta. Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\n\t\t\t\t\t\t\t<p>Mauris massa. Vestibulum lacinia arcu eget nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\n\t\t\t\t\t\t</article>\n            </Layout>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport Layout from './../Partials/Layout';\n\nimport Paragraph from '../../../../Models/Paragraph';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\n/**\n * Component for showing the About Page page.\n * \n * @component\n * @example\n * return (\n *   <About />\n * )\n */\nclass About extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            paragraphs: [],\n            hasError: false,\n        };\n    }        \n\n    componentDidMount() {\n        const paragraphs = [];\n        this.serverRequest = \n            axios\n                .get(`${publicUrl}/data/languages/english/pages/about.json`)\n                .then((result) => {\n                    result.data[0].paragraphs.map((item, index) => paragraphs.push(new Paragraph(index, item.text)));\n                    this.setState({ paragraphs });\n            });\n    }\n\n    // componentWillUnmount() {\n    //     if (this.serverRequest) {\n    //         this.serverRequest.abort();\n    //     }\n    // }\n\n    render() {\n        const { items, paragraphs, hasError } = this.state;\n        return (\n            <Layout>\n                {hasError ? <h1>Something went wrong.</h1> : null}\n                <div className=\"page\">\n                    <Jumbotron className=\"page about\">\n                        <h2>About Me page</h2>\n                        <p>This is the about me page</p>\n                        <hr />\n                        <div>\n                            <img align=\"right\" style={{ margin: \"10px\" }} src=\"http://placebeard.it/g/200/200\" width=\"200\" height=\"200\" />\n                            {paragraphs.map(paragraph => paragraph.toDisplay())}\n                        </div>\n                    </Jumbotron>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\nimport sanitizeHtml from 'sanitize-html';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\n\n/**\n * Course Model definition\n * @class Course\n * @property {number} id\n * @property {string} title\n * @property {string} text\n * @property {string} datestart\n * @property {string} dateend\n * @property {string} imagesrc\n */\nclass Course {\n\n    /**\n     * @constructor\n     * @param {*} id \n     * @param {*} title \n     * @param {*} text \n     * @param {*} datestart \n     * @param {*} dateend\n     * @param {*} imagesrc\n     */\n    constructor(id, title, text, datestart, dateend, imagesrc) {\n        this.id = id;\n        this.title = title;\n        this.text = text;\n        this.datestart = datestart;\n        this.dateend = dateend;\n        this.imagesrc = imagesrc;\n    }\n    \n    toDisplay = () => (\n        <Card key={this.id} className=\"course\" style={{ width: '18rem', margin: \"20px\" }}>\n            <Card.Img variant=\"top\" src={this.imagesrc} style={{ textAlign: \"center\", padding: \"20px\", width: \"200px\", height: \"200px\"}} />\n            <Card.Body>\n                <Card.Title className=\"p_title\">{this.title}</Card.Title>\n                <Card.Text className=\"p_text\" dangerouslySetInnerHTML={{__html: \n                    sanitizeHtml(this.text, {\n                        allowedTags: [ 'p', 'b', 'i', 'em', 'strong', 'a' ],\n                        allowedAttributes: {\n                            'a': [ 'href' ]\n                        }})}} />\n                <dl>\n                    <dt>Start:</dt>\n                    <dd><Badge variant=\"primary\" className=\"p_datestart\">{this.datestart}</Badge></dd>\n                    <dt>End:</dt>\n                    <dd><Badge variant=\"secondary\" className=\"p_dateend\">{this.dateend}</Badge></dd>\n                </dl>                    \n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default Course;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\n\nimport Layout from '../Partials/Layout';\nimport Paragraph from '../../../../Models/Paragraph';\nimport Course from '../../../../Models/Course';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\n/**\n * Component for showing the Classes page.\n * \n * @component\n * @example\n * return (\n *   <Classes />\n * )\n */\nclass Classes extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            classes: [],\n            paragraphs: [],\n            currentClassId: undefined,\n            hasError: false,\n        };\n    }\n\n    componentDidMount() {\n        const classes = [];\n        this.serverRequest = \n            axios\n                .get(`${publicUrl}/data/languages/english/classes.json`)\n                .then((result) => {\n                    result.data.map((item, index) => classes.push(new Course(item.id, item.title, item.text, item.datestart, item.dateend, item.imagesrc)));\n                    let currentClassId = undefined;\n                    if (classes && classes.length > 0) currentClassId = classes[0].id;\n                    this.setState({ classes, currentClassId });\n            });\n            const paragraphs = [];\n            this.serverRequest = \n                axios\n                    .get(`${publicUrl}/data/languages/english/pages/classes.json`)\n                    .then((result) => {\n                        result.data[0].paragraphs.map((item, index) => paragraphs.push(new Paragraph(index, item.text)));\n                        this.setState({ paragraphs });\n                });\n    }\n\n    static getDerivedStateFromError(error) {       \n        return { hasError: true };  \n    }\n\n    onShowClass = (classId) => {\n        this.setState({ currentClassId: classId });\n    }\n\n    render() {\n        const { classes, paragraphs, currentClassId, hasError } = this.state;\n        return (\n            <Layout>\n                {hasError ? <h1>Something went wrong.</h1> : null}\n                <div className=\"page\">\n                    <Container>\n                        <Row>\n                            <Col sm={8}>\n                                <Jumbotron className=\"page classes\">\n                                    <h2>Our Classes</h2>\n                                    <p>This is the classes page</p>\n                                    <hr />\n                                    {paragraphs.map(paragraph => paragraph.toDisplay())}\n                                    {classes && classes.length > 0 ?\n                                        <ListGroup>\n                                        {classes.map((course, index) =>\n                                            <ListGroup.Item key={index} action onClick={() => this.onShowClass(course.id)}>\n                                            {course.title} <Badge variant=\"secondary\">show details</Badge>\n                                            </ListGroup.Item>)}\n                                            </ListGroup> : null}\n                                </Jumbotron>\n                            </Col>\n                            <Col sm={4}>\n                                {classes && classes.length > 0 ?\n                                    classes.map(course => (course.id === currentClassId) ?\n                                        course.toDisplay() : null) \n                                    : null}\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Classes;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport Layout from './../Partials/Layout';\n\nimport Paragraph from '../../../../Models/Paragraph';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\n/**\n * Component for showing the Contact Page page.\n * \n * @component\n * @example\n * return (\n *   <Contact />\n * )\n */\nclass Contact extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            paragraphs: [],\n            hasError: false,\n        };\n    }        \n\n    componentDidMount() {\n        const paragraphs = [];\n        this.serverRequest = \n            axios\n                .get(`${publicUrl}/data/languages/english/pages/contact.json`)\n                .then((result) => {\n                    result.data[0].paragraphs.map((item, index) => paragraphs.push(new Paragraph(index, item.text)));\n                    this.setState({ paragraphs });\n            });\n    }\n\n    // componentWillUnmount() {\n    //     if (this.serverRequest) {\n    //         this.serverRequest.abort();\n    //     }\n    // }\n\n    render() {\n        const { items, paragraphs, hasError } = this.state;\n        return (\n            <Layout>\n                {hasError ? <h1>Something went wrong.</h1> : null}\n                <div className=\"page\">\n                    <Jumbotron className=\"page contact\">\n                        <h2>Contact Me page</h2>\n                        <p>This is the Contact me page</p>\n                        <hr />\n                        <div>\n                            {paragraphs.map(paragraph => paragraph.toDisplay())}\n                        </div>\n                    </Jumbotron>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport Home from '../Languages/Italian/Pages/Home';\nimport About from '../Languages/Italian/Pages/About';\nimport Classes from '../Languages/Italian/Pages/Classes';\nimport Contact from '../Languages/Italian/Pages/Contact';\n\n/**\n * Functional Component for handle routes to About Section.\n * \n * @component\n * @example\n * return (\n *   <ItalianSection />\n * )\n */\nconst ItalianSection = withRouter(props =>\n    <>\n        <Route exact path={`${props.match.url}`} component={Home} />\n        <Route exact path={`${props.match.url}/about`} component={About} />\n        <Route exact path={`${props.match.url}/classes`} component={Classes} />\n        <Route exact path={`${props.match.url}/contact`} component={Contact} />\n    </>\n);\n\nexport default ItalianSection;","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport Layout from './../Partials/Layout';\n\n/**\n * Component for showing the error page.\n * \n * @component\n * @example\n * return (\n *   <Error />\n * )\n */\nclass Error extends Component {\n    render() {\n        return (\n            <Layout>\n                <div className=\"page\">\n                    <Jumbotron className=\"page error\">\n                        <h2>Error Page</h2>\n                        <p>Sorry, there are some errors...</p>\n                    </Jumbotron>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Error;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ItalianSection from './ItalianSection';\n// import EnglishSection from './EnglishSection';\n// import SpanishSection from './SpanishSection';\n// import GermanSection from './GermanSection';\nimport Error from '../Languages/Italian/Pages/Error';\nimport NotFound from '../Languages/Italian/Pages/Error';\n\n/**\n * Functional Component for handle routes of sites.\n * \n * @component\n * @example\n * return (\n *   <SiteRoutes />\n * )\n */\nconst SiteRoutes = () =>\n    <Switch>\n        {/* <Route path={`/en`} component={EnglishSection} />\n        <Route path={`/es`} component={SpanishSection} />\n        <Route path={`/de`} component={GermanSection} /> */}\n        <Route path={`/`} component={ItalianSection} />\n        { /* default language */ }\n        <Route exact path=\"/error\" component={Error} />\n        \n        <Route path=\"*\" component={NotFound} />\n    </Switch>\n\nexport default SiteRoutes;","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport SiteRoutes from './Sections/SiteRoutes';\nimport './App.css';\n\n/**\n * Title of the site\n */\nconst siteName = 'Simple App React';\nconst publicUrl = process.env.PUBLIC_URL;\n\n/**\n * This fuction startup the application\n * @function App\n */\nfunction App() {\n  return (\n    <div id=\"wrapper\">\n        <Router basename={publicUrl}>\n            <SiteRoutes />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CC from \"cookieconsent\"\nimport './Styles/style.css';\n// import './Styles/print.css';\nimport './Styles/Site.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst baseAppPath = process.env.REACT_APP_BASE_PATH;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}